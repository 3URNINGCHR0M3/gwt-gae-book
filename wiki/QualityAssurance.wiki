#summary Quality assurance

So far we developed a [http://cultureshows.appspot.com/ basic app], which allows signing in with OpenID and managing performances schedule. Before we add more features, we need to look more at quality.

<wiki:toc max_depth="2" />


= Pre-requisites =
 * Make sure you have [http://code.google.com/p/gwt-gae-book/downloads/detail?name=CultureShows-0.3-before-QA.tgz the latest source code] for this chapter
 * [http://en.wikipedia.org/wiki/Quality_assurance General quality assurance]
 * [http://en.wikipedia.org/wiki/Software_quality Software quality]

= When should QA start? =
If you answered at unit tests, or right at the beginning of development with [http://en.wikipedia.org/wiki/Test-driven_development Test-driven development], think again. What if you deliver a bug-free, but useless project to your customer?

QA should start when we [SoYouHaveAnIdea start defining requirements]. The later we fix defects, the more costly they are. A bad user story is much easier to fix before we actually implement it.

Let's see how we can increase quality for the main phases in a software project. Note that this is an iterative process which repeats continuously throughout the project lifetime, rather than being done in a [http://en.wikipedia.org/wiki/Waterfall_model waterfall] way.

= Personae =
When defining [http://en.wikipedia.org/wiki/Persona_(marketing) user personae], consider your intended audience. Then search, meet and discuss with a few representatives for each of the draft personae you described so far. Understand their behavior patterns, environment, skills and needs, and include these in persona description.

*Additional resources*
 * [http://www.designstamp.com/downloads/DesignStamp_PersonaProcess.pdf The Persona Process]

=  User stories =
Having a good idea of personae life goals, experience goals and end goals, we can start [SoYouHaveAnIdea defining user stories] that contribute to accomplishing those goals.

One of the best ways to validate stories and prioritization is to share them with personae representatives. List all the stories (removing "As Persona") and ask them to rate their importance. Discuss why they rated it that way. The lowest rated stories should probably be completely removed from your backlog.
Ask what's missing to help them accomplish their goals, and rate the importance of those stories too.

*Additional resources*
 * [http://www.slideshare.net/craigwbrown/invest-in-good-user-stories-presentation INVEST in user stories]
 * <a href="http://www.amazon.com/gp/product/0976470705?ie=UTF8&tag=gwtgaebook-20&linkCode=as2&camp=1789&creative=9325&creativeASIN=0976470705">The Four Steps to the Epiphany</a><img src="http://www.assoc-amazon.com/e/ir?t=gwtgaebook-20&l=as2&o=1&a=0976470705" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /> : customer discovery, customer validation, customer creation, company building


= Metrics and KPIs =
They say "You can’t improve what you can’t measure". If we're asked "How is the project doing?" and reply "Good", a follow-up question might be "What do you understand by good?". Common project metrics include 
 * Schedule - estimated/targeted delivery date and slippage in days
 * Cost - actual budget versus original budget
 * Resources - what resources and much of them are we using (people, time, equipment...)

Using Scrum allows quick (bi-weekly to monthly) inspection of these, and adapting.

[http://en.wikipedia.org/wiki/Performance_indicator Key Performance Indicators] give us more specific indicators on how we stand on areas important to our project. Some of the Culture Shows KPIs are:
 * visitors of the landing page
 * users signing in
 * users scheduling performances
 * 3rd party sites displaying performances
 * active theaters (having regular performances)

[http://en.wikipedia.org/wiki/Net_Promoter Net Promoter Score] is a relatively recent and simple metric for [http://en.wikipedia.org/wiki/Customer_satisfaction customer satisfaction].

*Additional resources*
 * [http://www.theultimatequestion.com/theultimatequestion/measuring_netpromoter.asp?groupcode=2 Measuring Net Promoter Score]

= User interface =
We've already covered [VisualizingYourApp building mockups] and getting feedback on them. 

A fast and cheap technique for [http://en.wikipedia.org/wiki/Usability_testing usability testing] is to print all the mocked screens of the app, then going with prints to potential users. After giving a basic context, present the landing page print asking questions such as "what do you think this is", "what would you do next", "how would you do that". Be careful to avoid direct instructions such as "Now please schedule a performance" (the button is obvious).

According to their actions, present the corresponding screen print. If they want to fill out form fields, ask them to do that with a pen, and fill it yourself too on the next screen where that data appears. Investing a few days in preparing and performing this research will save weeks later.

*Additional resources*
 * <a href="http://www.amazon.com/gp/product/0321344758?ie=UTF8&tag=gwtgaebook-20&linkCode=as2&camp=1789&creative=9325&creativeASIN=0321344758">Don't Make Me Think: A Common Sense Approach to Web Usability</a><img src="http://www.assoc-amazon.com/e/ir?t=gwtgaebook-20&l=as2&o=1&a=0321344758" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /> (great book)
 * <a href="http://www.amazon.com/gp/product/0672326140?ie=UTF8&tag=gwtgaebook-20&linkCode=as2&camp=1789&creative=9325&creativeASIN=0672326140">The Inmates Are Running the Asylum: Why High Tech Products Drive Us Crazy and How to Restore the Sanity</a><img src="http://www.assoc-amazon.com/e/ir?t=gwtgaebook-20&l=as2&o=1&a=0672326140" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />


= Software design =

design spec (arch, testability, performance,...)

peer reviews


I might be old school, but I still like doing pseudocode first for complex functionality. [Authentication#Design_of_handling_both_anonymous_and_authenticated_users We saw] how this saved us from investing into actual code writing, debugging and testing which would have been thrown away later. Pseudocode also gives a higher-level overview on how various components works. Keep it updated as the project develops, to be used later as a reference by you and others.


= Code =

Careful on how much QA is invested in initial 1.0 *code*. Just did a major redesign, some would have been thrown away.


== Client unit testing ==

== UI testing ==

== Server testing ==

== Performance testing ==
is client first load waiting for server to say if signed in or not? Assume no and update UI when response received. 

== More ways to increase software quality ==
findbugs tool

*Additional resources*
 * <a href="http://www.amazon.com/gp/product/020161622X?ie=UTF8&tag=gwtgaebook-20&linkCode=as2&camp=1789&creative=9325&creativeASIN=020161622X">The Pragmatic Programmer: From Journeyman to Master</a><img src="http://www.assoc-amazon.com/e/ir?t=gwtgaebook-20&l=as2&o=1&a=020161622X" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />


= Deployment =

= Other areas =
Operations (monitoring availability, performance), support, marketing (campaigns success)...








<wiki:comment>NAV_START</wiki:comment>
<a href='http://code.google.com/p/gwt-gae-book/issues/entry'><img src='http://gwt-gae-book.googlecode.com/svn/wiki/assets/envelope.png' border='0' title='Send feedback' /></a>
<img src='http://gwt-gae-book.googlecode.com/svn/wiki/assets/spacer.png' border='0' />
<a href='http://code.google.com/p/gwt-gae-book/wiki/ManagingPerformances'><img src='http://gwt-gae-book.googlecode.com/svn/wiki/assets/prev.png' border='0' title='Previous chapter: Updating and deleting performances' /></a>
<a href='http://code.google.com/p/gwt-gae-book/wiki/TableOfContents'><img src='http://gwt-gae-book.googlecode.com/svn/wiki/assets/contents.png' border='0' title='Table Of Contents' /></a>
<a href='http://code.google.com/p/gwt-gae-book/wiki/LandingEnhancements'><img src='http://gwt-gae-book.googlecode.com/svn/wiki/assets/next.png' border='0' title='Next chapter: Landing page enhancements' /></a>
<wiki:comment>NAV_END</wiki:comment>